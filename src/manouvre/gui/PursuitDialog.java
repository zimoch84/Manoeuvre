/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */
package manouvre.gui;

import java.awt.Dimension;
import java.awt.Graphics;
import java.awt.Image;
import java.awt.Toolkit;
import java.util.Observable;
import java.util.Observer;
import javax.swing.JRootPane;
import javax.swing.WindowConstants;
import javax.swing.text.SimpleAttributeSet;
import javax.swing.text.StyleConstants;
import manouvre.game.CardCommandFactory;
import manouvre.game.Combat;
import manouvre.game.Game;
import manouvre.game.commands.AdvanceUnitCommand;
import manouvre.game.commands.CommandQueue;
import manouvre.game.commands.DontAdvanceUnitCommand;
import manouvre.game.interfaces.ClientInterface;
import manouvre.game.interfaces.Command;

/**
 *
 * @author Piotr
 */
public class PursuitDialog extends javax.swing.JFrame implements Observer {

    Command advanceCommand, doNotAdvanceCommand, pursueCommand;
 
    ClientInterface client;
    CommandQueue cmdQueue;
    Game game;
    Combat combat;
    
    public PursuitDialog() {
        initComponents();
    }

    public PursuitDialog(ClientInterface client, CommandQueue cmdQueue, Game game)  {
       

        
        
        this.game = game;
        this.combat = game.getCombat();
        this.cmdQueue = cmdQueue;
        this.setUndecorated(true);
        this.getRootPane().setWindowDecorationStyle(JRootPane.NONE);
       
    
        game.getCardCommandFactory().addObserver(this);
        
        initComponents();
       
        SimpleAttributeSet center = new SimpleAttributeSet();
        StyleConstants.setAlignment(center, StyleConstants.ALIGN_CENTER);
      
        setButtonVisibility();
        
        Dimension dim = Toolkit.getDefaultToolkit().getScreenSize();
        // Determine the new location of the window
        int w = this.getSize().width;
        int h = this.getSize().height;
        int x = (dim.width-w)/2;
        int y = (dim.height-h)/2;
        this.setLocation(x, y);
        //jLabel1.setText(game.getCurrentPlayer().getName() + ", " +jLabel1.getText() );
        setVisible(true);
        this.setDefaultCloseOperation(WindowConstants.EXIT_ON_CLOSE);
    }
        
    private void setButtonVisibility()
    {
       doNotAdvanceButton.setEnabled(combat.isAttackerNotRequiredToAdvance());
       if(game.getAdvancedUnit() != null)
       {
            pursueButton.setEnabled(combat.canAttackerPursue());
            advanceButton.setEnabled(true);
       }  
    }
       
    
    @Override
    public void update(Observable o, Object arg) {
        
        CardCommandFactory ccmdf = (CardCommandFactory) o;
        String dialogType = (String) arg;
        
        if(dialogType.equals(CardCommandFactory.PICKED_ADVANCE))
                setButtonVisibility();
  
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jPanel1 = new javax.swing.JPanel();
        doNotAdvanceButton = new javax.swing.JButton();
        pursueButton = new javax.swing.JButton();
        advanceButton = new javax.swing.JButton();
        jLabel2 = new javax.swing.JLabel();

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);
        getContentPane().setLayout(new java.awt.FlowLayout());

        doNotAdvanceButton.setText("Do Not Advance");
        doNotAdvanceButton.setEnabled(false);
        doNotAdvanceButton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                doNotAdvanceButtonActionPerformed(evt);
            }
        });

        pursueButton.setText("Pursue");
        pursueButton.setEnabled(false);
        pursueButton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                pursueButtonActionPerformed(evt);
            }
        });

        advanceButton.setText("Advance");
        advanceButton.setEnabled(false);
        advanceButton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                advanceButtonActionPerformed(evt);
            }
        });

        jLabel2.setText("Opponent has withdrawn please choose unit to advance");

        javax.swing.GroupLayout jPanel1Layout = new javax.swing.GroupLayout(jPanel1);
        jPanel1.setLayout(jPanel1Layout);
        jPanel1Layout.setHorizontalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel1Layout.createSequentialGroup()
                .addComponent(pursueButton, javax.swing.GroupLayout.PREFERRED_SIZE, 84, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addComponent(advanceButton, javax.swing.GroupLayout.PREFERRED_SIZE, 104, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addComponent(doNotAdvanceButton, javax.swing.GroupLayout.PREFERRED_SIZE, 148, javax.swing.GroupLayout.PREFERRED_SIZE))
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel1Layout.createSequentialGroup()
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addComponent(jLabel2, javax.swing.GroupLayout.PREFERRED_SIZE, 289, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(29, 29, 29))
        );
        jPanel1Layout.setVerticalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel1Layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(jLabel2, javax.swing.GroupLayout.PREFERRED_SIZE, 38, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, 34, Short.MAX_VALUE)
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(pursueButton)
                    .addComponent(doNotAdvanceButton)
                    .addComponent(advanceButton))
                .addContainerGap())
        );

        getContentPane().add(jPanel1);

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void doNotAdvanceButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_doNotAdvanceButtonActionPerformed
         
        Command dontAdvanceCommand = 
                new DontAdvanceUnitCommand(game.getCurrentPlayer().getName() );
        cmdQueue.storeAndExecuteAndSend(dontAdvanceCommand);
        this.dispose();
    }//GEN-LAST:event_doNotAdvanceButtonActionPerformed

    private void pursueButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_pursueButtonActionPerformed
        
        
        if(doNotAdvanceCommand != null){
        
            cmdQueue.storeAndExecuteAndSend(doNotAdvanceCommand);
            
        }
        this.dispose();
    }//GEN-LAST:event_pursueButtonActionPerformed

    private void advanceButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_advanceButtonActionPerformed
        
        Command advanceCommand = 
                new AdvanceUnitCommand(game.getCurrentPlayer().getName(),
                        game.getAdvancedUnit() , 
                        game.getCombat().getDefendingUnit().getPosition() 
                        );
        
        cmdQueue.storeAndExecuteAndSend(advanceCommand);
        this.dispose();
        
        
    }//GEN-LAST:event_advanceButtonActionPerformed

    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(PursuitDialog.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(PursuitDialog.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(PursuitDialog.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(PursuitDialog.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>

        /* Create and display the form */
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                new PursuitDialog().setVisible(true);
            }
        });
    }
    public void setOkCommand(Command okCommand) {
        this.advanceCommand = okCommand;
    }

    public void setCancelCommand(Command cancelCommand) {
        this.doNotAdvanceCommand = cancelCommand;
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton advanceButton;
    private javax.swing.JButton doNotAdvanceButton;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JPanel jPanel1;
    private javax.swing.JButton pursueButton;
    // End of variables declaration//GEN-END:variables


}
